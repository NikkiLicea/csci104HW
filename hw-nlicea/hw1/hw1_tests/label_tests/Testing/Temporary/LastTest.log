Start testing: Jan 30 06:47 UTC
----------------------------------------------------------
1/23 Testing: LabelList.Nominal
1/23 Test: LabelList.Nominal
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=LabelList.Nominal"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"LabelList.Nominal" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==289== Memcheck, a memory error detector
==289== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==289== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==289== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=LabelList.Nominal
==289== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = LabelList.Nominal
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from LabelList
[ RUN      ] LabelList.Nominal
==289== Invalid read of size 8
==289==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==289==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==289==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==289==    by 0x11CFC0: LabelList_Nominal_Test::TestBody() (label_tests.cpp:108)
==289==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==289==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==289==    by 0x161EE5: Run (gtest.cc:2508)
==289==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==289==    by 0x162044: Run (gtest.cc:2684)
==289==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==289==    by 0x16212C: Run (gtest.cc:2816)
==289==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==289==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==289==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==289==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==289==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==289==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==289==  Address 0x4ddab88 is 72 bytes inside a block of size 120 free'd
==289==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==289==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==289==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==289==    by 0x11CFC0: LabelList_Nominal_Test::TestBody() (label_tests.cpp:108)
==289==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==289==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==289==    by 0x161EE5: Run (gtest.cc:2508)
==289==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==289==    by 0x162044: Run (gtest.cc:2684)
==289==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==289==    by 0x16212C: Run (gtest.cc:2816)
==289==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==289==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==289==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==289==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==289==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==289==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==289==  Block was alloc'd at
==289==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==289==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==289==    by 0x11BEE2: LabelList_Nominal_Test::TestBody() (label_tests.cpp:114)
==289==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==289==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==289==    by 0x161EE5: Run (gtest.cc:2508)
==289==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==289==    by 0x162044: Run (gtest.cc:2684)
==289==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==289==    by 0x16212C: Run (gtest.cc:2816)
==289==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==289==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==289==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==289==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==289==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==289==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==289== 
==289== Invalid read of size 8
==289==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==289==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==289==    by 0x11CFC0: LabelList_Nominal_Test::TestBody() (label_tests.cpp:108)
==289==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==289==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==289==    by 0x161EE5: Run (gtest.cc:2508)
==289==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==289==    by 0x162044: Run (gtest.cc:2684)
==289==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==289==    by 0x16212C: Run (gtest.cc:2816)
==289==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==289==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==289==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==289==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==289==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==289==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==289==  Address 0x4ddb170 is 0 bytes inside a block of size 16 free'd
==289==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==289==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==289==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==289==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==289==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==289==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==289==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==289==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==289==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==289==    by 0x11CFC0: LabelList_Nominal_Test::TestBody() (label_tests.cpp:108)
==289==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==289==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==289==    by 0x161EE5: Run (gtest.cc:2508)
==289==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==289==  Block was alloc'd at
==289==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==289==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==289==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==289==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==289==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==289==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==289==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==289==    by 0x139F34: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:248)
==289==    by 0x11BF3F: LabelList_Nominal_Test::TestBody() (label_tests.cpp:119)
==289==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==289==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==289==    by 0x161EE5: Run (gtest.cc:2508)
==289==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==289==    by 0x162044: Run (gtest.cc:2684)
==289==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==289== 
unknown file: Failure
C++ exception with description "token references an invalid message" thrown in the test body.
[  FAILED  ] LabelList.Nominal (133 ms)
[----------] 1 test from LabelList (144 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (169 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] LabelList.Nominal

 1 FAILED TEST
==289== 
==289== HEAP SUMMARY:
==289==     in use at exit: 0 bytes in 0 blocks
==289==   total heap usage: 448 allocs, 448 frees, 134,962 bytes allocated
==289== 
==289== All heap blocks were freed -- no leaks are possible
==289== 
==289== For lists of detected and suppressed errors, rerun with: -s
==289== ERROR SUMMARY: 6 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.00 sec
----------------------------------------------------------
Test Failed.
"LabelList.Nominal" end time: Jan 30 06:47 UTC
"LabelList.Nominal" time elapsed: 00:00:02
----------------------------------------------------------

2/23 Testing: EmptyList.EmptyAndSize
2/23 Test: EmptyList.EmptyAndSize
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=EmptyList.EmptyAndSize"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"EmptyList.EmptyAndSize" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==290== Memcheck, a memory error detector
==290== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==290== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==290== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=EmptyList.EmptyAndSize
==290== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = EmptyList.EmptyAndSize
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from EmptyList
[ RUN      ] EmptyList.EmptyAndSize
[       OK ] EmptyList.EmptyAndSize (38 ms)
[----------] 1 test from EmptyList (49 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (90 ms total)
[  PASSED  ] 1 test.
==290== 
==290== HEAP SUMMARY:
==290==     in use at exit: 0 bytes in 0 blocks
==290==   total heap usage: 406 allocs, 406 frees, 129,513 bytes allocated
==290== 
==290== All heap blocks were freed -- no leaks are possible
==290== 
==290== For lists of detected and suppressed errors, rerun with: -s
==290== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.86 sec
----------------------------------------------------------
Test Passed.
"EmptyList.EmptyAndSize" end time: Jan 30 06:47 UTC
"EmptyList.EmptyAndSize" time elapsed: 00:00:01
----------------------------------------------------------

3/23 Testing: EmptyList.OperationsOnEmptyList
3/23 Test: EmptyList.OperationsOnEmptyList
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=EmptyList.OperationsOnEmptyList"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"EmptyList.OperationsOnEmptyList" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==291== Memcheck, a memory error detector
==291== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==291== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==291== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=EmptyList.OperationsOnEmptyList
==291== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = EmptyList.OperationsOnEmptyList
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from EmptyList
[ RUN      ] EmptyList.OperationsOnEmptyList
[       OK ] EmptyList.OperationsOnEmptyList (28 ms)
[----------] 1 test from EmptyList (35 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (60 ms total)
[  PASSED  ] 1 test.
==291== 
==291== HEAP SUMMARY:
==291==     in use at exit: 0 bytes in 0 blocks
==291==   total heap usage: 404 allocs, 404 frees, 129,560 bytes allocated
==291== 
==291== All heap blocks were freed -- no leaks are possible
==291== 
==291== For lists of detected and suppressed errors, rerun with: -s
==291== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.60 sec
----------------------------------------------------------
Test Passed.
"EmptyList.OperationsOnEmptyList" end time: Jan 30 06:47 UTC
"EmptyList.OperationsOnEmptyList" time elapsed: 00:00:01
----------------------------------------------------------

4/23 Testing: Exceptions.Find
4/23 Test: Exceptions.Find
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Exceptions.Find"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Exceptions.Find" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==292== Memcheck, a memory error detector
==292== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==292== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==292== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Exceptions.Find
==292== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Exceptions.Find
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Exceptions
[ RUN      ] Exceptions.Find
[       OK ] Exceptions.Find (78 ms)
[----------] 1 test from Exceptions (87 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (113 ms total)
[  PASSED  ] 1 test.
==292== 
==292== HEAP SUMMARY:
==292==     in use at exit: 0 bytes in 0 blocks
==292==   total heap usage: 384 allocs, 384 frees, 129,056 bytes allocated
==292== 
==292== All heap blocks were freed -- no leaks are possible
==292== 
==292== For lists of detected and suppressed errors, rerun with: -s
==292== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.60 sec
----------------------------------------------------------
Test Passed.
"Exceptions.Find" end time: Jan 30 06:47 UTC
"Exceptions.Find" time elapsed: 00:00:01
----------------------------------------------------------

5/23 Testing: Exceptions.Label
5/23 Test: Exceptions.Label
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Exceptions.Label"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Exceptions.Label" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==293== Memcheck, a memory error detector
==293== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==293== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==293== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Exceptions.Label
==293== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Exceptions.Label
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Exceptions
[ RUN      ] Exceptions.Label
[       OK ] Exceptions.Label (65 ms)
[----------] 1 test from Exceptions (75 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (114 ms total)
[  PASSED  ] 1 test.
==293== 
==293== HEAP SUMMARY:
==293==     in use at exit: 0 bytes in 0 blocks
==293==   total heap usage: 406 allocs, 406 frees, 129,620 bytes allocated
==293== 
==293== All heap blocks were freed -- no leaks are possible
==293== 
==293== For lists of detected and suppressed errors, rerun with: -s
==293== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.88 sec
----------------------------------------------------------
Test Passed.
"Exceptions.Label" end time: Jan 30 06:47 UTC
"Exceptions.Label" time elapsed: 00:00:01
----------------------------------------------------------

6/23 Testing: Exceptions.Print
6/23 Test: Exceptions.Print
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Exceptions.Print"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Exceptions.Print" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==294== Memcheck, a memory error detector
==294== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==294== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==294== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Exceptions.Print
==294== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Exceptions.Print
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Exceptions
[ RUN      ] Exceptions.Print
[       OK ] Exceptions.Print (70 ms)
[----------] 1 test from Exceptions (80 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (115 ms total)
[  PASSED  ] 1 test.
==294== 
==294== HEAP SUMMARY:
==294==     in use at exit: 0 bytes in 0 blocks
==294==   total heap usage: 406 allocs, 406 frees, 129,619 bytes allocated
==294== 
==294== All heap blocks were freed -- no leaks are possible
==294== 
==294== For lists of detected and suppressed errors, rerun with: -s
==294== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.45 sec
----------------------------------------------------------
Test Passed.
"Exceptions.Print" end time: Jan 30 06:47 UTC
"Exceptions.Print" time elapsed: 00:00:01
----------------------------------------------------------

7/23 Testing: Exceptions.Unlabel
7/23 Test: Exceptions.Unlabel
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Exceptions.Unlabel"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Exceptions.Unlabel" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==295== Memcheck, a memory error detector
==295== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==295== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==295== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Exceptions.Unlabel
==295== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Exceptions.Unlabel
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Exceptions
[ RUN      ] Exceptions.Unlabel
==295== Invalid read of size 8
==295==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==295==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==295==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==295==    by 0x11EBAC: Exceptions_Unlabel_Test::TestBody() (label_tests.cpp:185)
==295==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==295==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==295==    by 0x161EE5: Run (gtest.cc:2508)
==295==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==295==    by 0x162044: Run (gtest.cc:2684)
==295==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==295==    by 0x16212C: Run (gtest.cc:2816)
==295==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==295==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==295==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==295==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==295==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==295==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==295==  Address 0x4ddab88 is 72 bytes inside a block of size 120 free'd
==295==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==295==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==295==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==295==    by 0x11EBAC: Exceptions_Unlabel_Test::TestBody() (label_tests.cpp:185)
==295==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==295==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==295==    by 0x161EE5: Run (gtest.cc:2508)
==295==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==295==    by 0x162044: Run (gtest.cc:2684)
==295==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==295==    by 0x16212C: Run (gtest.cc:2816)
==295==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==295==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==295==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==295==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==295==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==295==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==295==  Block was alloc'd at
==295==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==295==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==295==    by 0x11E77F: Exceptions_Unlabel_Test::TestBody() (label_tests.cpp:186)
==295==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==295==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==295==    by 0x161EE5: Run (gtest.cc:2508)
==295==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==295==    by 0x162044: Run (gtest.cc:2684)
==295==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==295==    by 0x16212C: Run (gtest.cc:2816)
==295==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==295==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==295==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==295==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==295==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==295==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==295== 
==295== Invalid read of size 8
==295==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==295==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==295==    by 0x11EBAC: Exceptions_Unlabel_Test::TestBody() (label_tests.cpp:185)
==295==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==295==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==295==    by 0x161EE5: Run (gtest.cc:2508)
==295==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==295==    by 0x162044: Run (gtest.cc:2684)
==295==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==295==    by 0x16212C: Run (gtest.cc:2816)
==295==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==295==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==295==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==295==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==295==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==295==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==295==  Address 0x4ddae10 is 0 bytes inside a block of size 16 free'd
==295==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==295==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==295==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==295==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==295==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==295==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==295==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==295==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==295==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==295==    by 0x11EBAC: Exceptions_Unlabel_Test::TestBody() (label_tests.cpp:185)
==295==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==295==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==295==    by 0x161EE5: Run (gtest.cc:2508)
==295==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==295==  Block was alloc'd at
==295==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==295==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==295==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==295==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==295==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==295==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==295==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==295==    by 0x139F34: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:248)
==295==    by 0x11E7EB: Exceptions_Unlabel_Test::TestBody() (label_tests.cpp:187)
==295==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==295==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==295==    by 0x161EE5: Run (gtest.cc:2508)
==295==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==295==    by 0x162044: Run (gtest.cc:2684)
==295==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==295== 
[       OK ] Exceptions.Unlabel (82 ms)
[----------] 1 test from Exceptions (88 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (110 ms total)
[  PASSED  ] 1 test.
==295== 
==295== HEAP SUMMARY:
==295==     in use at exit: 0 bytes in 0 blocks
==295==   total heap usage: 418 allocs, 418 frees, 130,267 bytes allocated
==295== 
==295== All heap blocks were freed -- no leaks are possible
==295== 
==295== For lists of detected and suppressed errors, rerun with: -s
==295== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.55 sec
----------------------------------------------------------
Test Passed.
"Exceptions.Unlabel" end time: Jan 30 06:47 UTC
"Exceptions.Unlabel" time elapsed: 00:00:01
----------------------------------------------------------

8/23 Testing: Label.Label1
8/23 Test: Label.Label1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Label.Label1"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Label.Label1" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==296== Memcheck, a memory error detector
==296== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==296== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==296== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Label.Label1
==296== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Label.Label1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Label
[ RUN      ] Label.Label1
==296== Conditional jump or move depends on uninitialised value(s)
==296==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==296==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==296==    by 0x11F084: Label_Label1_Test::TestBody() (label_tests.cpp:202)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==    by 0x162044: Run (gtest.cc:2684)
==296==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==296==    by 0x16212C: Run (gtest.cc:2816)
==296==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==296==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==296==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==296==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==296==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==296==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==296== 
Label ld has 1 messages, when 2 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:58: Failure
Value of: compareList({"m0", "m4"}, list1, "ld")
  Actual: false (Label ld has 1 messages, when 2 is expected.)
Expected: true
Label ld has 2 messages, when 3 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:60: Failure
Value of: compareList({"m0", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 3 is expected.)
Expected: true
==296== Conditional jump or move depends on uninitialised value(s)
==296==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==296==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==296==    by 0x11F084: Label_Label1_Test::TestBody() (label_tests.cpp:202)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==    by 0x162044: Run (gtest.cc:2684)
==296==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==296==    by 0x16212C: Run (gtest.cc:2816)
==296==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==296==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==296==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==296==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==296==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==296==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==296== 
==296== Conditional jump or move depends on uninitialised value(s)
==296==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==296==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==296==    by 0x11F084: Label_Label1_Test::TestBody() (label_tests.cpp:202)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==    by 0x162044: Run (gtest.cc:2684)
==296==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==296==    by 0x16212C: Run (gtest.cc:2816)
==296==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==296==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==296==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==296==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==296==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==296==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==296== 
Label ld has 2 messages, when 4 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:62: Failure
Value of: compareList({"m0", "m2", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 4 is expected.)
Expected: true
==296== Invalid read of size 8
==296==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==296==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==296==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==296==    by 0x11F0BB: Label_Label1_Test::TestBody() (label_tests.cpp:197)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==    by 0x162044: Run (gtest.cc:2684)
==296==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==296==    by 0x16212C: Run (gtest.cc:2816)
==296==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==296==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==296==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==296==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==296==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==296==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==296==  Address 0x4dda238 is 72 bytes inside a block of size 120 free'd
==296==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==296==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==296==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==296==    by 0x11F0BB: Label_Label1_Test::TestBody() (label_tests.cpp:197)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==    by 0x162044: Run (gtest.cc:2684)
==296==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==296==    by 0x16212C: Run (gtest.cc:2816)
==296==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==296==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==296==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==296==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==296==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==296==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==296==  Block was alloc'd at
==296==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==296==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==296==    by 0x119064: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:43)
==296==    by 0x11F084: Label_Label1_Test::TestBody() (label_tests.cpp:202)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==    by 0x162044: Run (gtest.cc:2684)
==296==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==296==    by 0x16212C: Run (gtest.cc:2816)
==296==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==296==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==296==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==296==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==296==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==296==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==296== 
==296== Invalid read of size 8
==296==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==296==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==296==    by 0x11F0BB: Label_Label1_Test::TestBody() (label_tests.cpp:197)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==    by 0x162044: Run (gtest.cc:2684)
==296==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==296==    by 0x16212C: Run (gtest.cc:2816)
==296==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==296==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==296==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==296==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==296==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==296==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==296==  Address 0x4ddb5e0 is 0 bytes inside a block of size 40 free'd
==296==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==296==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==296==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==296==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==296==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==296==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==296==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==296==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==296==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==296==    by 0x11F0BB: Label_Label1_Test::TestBody() (label_tests.cpp:197)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==  Block was alloc'd at
==296==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==296==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==296==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==296==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==296==    by 0x13C57B: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, unsigned long, LabelList::MsgNode* const&) (vector.tcc:561)
==296==    by 0x13B910: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::resize(unsigned long, LabelList::MsgNode* const&) (stl_vector.h:957)
==296==    by 0x139FBC: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:255)
==296==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==296==    by 0x11F084: Label_Label1_Test::TestBody() (label_tests.cpp:202)
==296==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==296==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==296==    by 0x161EE5: Run (gtest.cc:2508)
==296==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==296==    by 0x162044: Run (gtest.cc:2684)
==296==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==296== 
[  FAILED  ] Label.Label1 (193 ms)
[----------] 1 test from Label (201 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (231 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Label.Label1

 1 FAILED TEST
==296== 
==296== HEAP SUMMARY:
==296==     in use at exit: 0 bytes in 0 blocks
==296==   total heap usage: 563 allocs, 563 frees, 156,501 bytes allocated
==296== 
==296== All heap blocks were freed -- no leaks are possible
==296== 
==296== Use --track-origins=yes to see where uninitialised values come from
==296== For lists of detected and suppressed errors, rerun with: -s
==296== ERROR SUMMARY: 17 errors from 5 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.86 sec
----------------------------------------------------------
Test Failed.
"Label.Label1" end time: Jan 30 06:47 UTC
"Label.Label1" time elapsed: 00:00:01
----------------------------------------------------------

9/23 Testing: Label.Label2
9/23 Test: Label.Label2
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Label.Label2"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Label.Label2" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==297== Memcheck, a memory error detector
==297== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==297== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==297== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Label.Label2
==297== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Label.Label2
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Label
[ RUN      ] Label.Label2
==297== Conditional jump or move depends on uninitialised value(s)
==297==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==297==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==297==    by 0x11F404: Label_Label2_Test::TestBody() (label_tests.cpp:214)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297==    by 0x16212C: Run (gtest.cc:2816)
==297==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==297==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==297==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==297==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==297==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==297==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==297== 
Label ld has 1 messages, when 2 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:58: Failure
Value of: compareList({"m0", "m4"}, list1, "ld")
  Actual: false (Label ld has 1 messages, when 2 is expected.)
Expected: true
Label ld has 2 messages, when 3 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:60: Failure
Value of: compareList({"m0", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 3 is expected.)
Expected: true
==297== Conditional jump or move depends on uninitialised value(s)
==297==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==297==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==297==    by 0x11F404: Label_Label2_Test::TestBody() (label_tests.cpp:214)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297==    by 0x16212C: Run (gtest.cc:2816)
==297==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==297==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==297==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==297==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==297==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==297==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==297== 
==297== Conditional jump or move depends on uninitialised value(s)
==297==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==297==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==297==    by 0x11F404: Label_Label2_Test::TestBody() (label_tests.cpp:214)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297==    by 0x16212C: Run (gtest.cc:2816)
==297==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==297==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==297==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==297==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==297==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==297==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==297== 
Label ld has 2 messages, when 4 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:62: Failure
Value of: compareList({"m0", "m2", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 4 is expected.)
Expected: true
==297== Conditional jump or move depends on uninitialised value(s)
==297==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==297==    by 0x11F454: Label_Label2_Test::TestBody() (label_tests.cpp:219)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297==    by 0x16212C: Run (gtest.cc:2816)
==297==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==297==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==297==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==297==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==297==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==297==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==297== 
Label ld has 2 messages, when 4 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:226: Failure
Value of: compareList({"m0", "m2", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 4 is expected.)
Expected: true
==297== Invalid read of size 8
==297==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==297==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==297==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==297==    by 0x11FED8: Label_Label2_Test::TestBody() (label_tests.cpp:209)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297==    by 0x16212C: Run (gtest.cc:2816)
==297==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==297==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==297==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==297==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==297==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==297==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==297==  Address 0x4dda238 is 72 bytes inside a block of size 120 free'd
==297==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==297==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==297==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==297==    by 0x11FED8: Label_Label2_Test::TestBody() (label_tests.cpp:209)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297==    by 0x16212C: Run (gtest.cc:2816)
==297==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==297==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==297==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==297==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==297==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==297==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==297==  Block was alloc'd at
==297==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==297==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==297==    by 0x119064: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:43)
==297==    by 0x11F404: Label_Label2_Test::TestBody() (label_tests.cpp:214)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297==    by 0x16212C: Run (gtest.cc:2816)
==297==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==297==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==297==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==297==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==297==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==297==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==297== 
==297== Invalid read of size 8
==297==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==297==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==297==    by 0x11FED8: Label_Label2_Test::TestBody() (label_tests.cpp:209)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297==    by 0x16212C: Run (gtest.cc:2816)
==297==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==297==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==297==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==297==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==297==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==297==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==297==  Address 0x4ddb5e0 is 0 bytes inside a block of size 40 free'd
==297==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==297==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==297==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==297==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==297==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==297==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==297==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==297==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==297==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==297==    by 0x11FED8: Label_Label2_Test::TestBody() (label_tests.cpp:209)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==  Block was alloc'd at
==297==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==297==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==297==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==297==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==297==    by 0x13C57B: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, unsigned long, LabelList::MsgNode* const&) (vector.tcc:561)
==297==    by 0x13B910: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::resize(unsigned long, LabelList::MsgNode* const&) (stl_vector.h:957)
==297==    by 0x139FBC: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:255)
==297==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==297==    by 0x11F404: Label_Label2_Test::TestBody() (label_tests.cpp:214)
==297==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==297==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==297==    by 0x161EE5: Run (gtest.cc:2508)
==297==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==297==    by 0x162044: Run (gtest.cc:2684)
==297==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==297== 
[  FAILED  ] Label.Label2 (143 ms)
[----------] 1 test from Label (149 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (171 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Label.Label2

 1 FAILED TEST
==297== 
==297== HEAP SUMMARY:
==297==     in use at exit: 0 bytes in 0 blocks
==297==   total heap usage: 613 allocs, 613 frees, 165,150 bytes allocated
==297== 
==297== All heap blocks were freed -- no leaks are possible
==297== 
==297== Use --track-origins=yes to see where uninitialised values come from
==297== For lists of detected and suppressed errors, rerun with: -s
==297== ERROR SUMMARY: 18 errors from 6 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.62 sec
----------------------------------------------------------
Test Failed.
"Label.Label2" end time: Jan 30 06:47 UTC
"Label.Label2" time elapsed: 00:00:01
----------------------------------------------------------

10/23 Testing: Find.FindEmpty
10/23 Test: Find.FindEmpty
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Find.FindEmpty"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Find.FindEmpty" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==298== Memcheck, a memory error detector
==298== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==298== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==298== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Find.FindEmpty
==298== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Find.FindEmpty
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Find
[ RUN      ] Find.FindEmpty
[       OK ] Find.FindEmpty (26 ms)
[----------] 1 test from Find (33 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (71 ms total)
[  PASSED  ] 1 test.
==298== 
==298== HEAP SUMMARY:
==298==     in use at exit: 0 bytes in 0 blocks
==298==   total heap usage: 380 allocs, 380 frees, 128,675 bytes allocated
==298== 
==298== All heap blocks were freed -- no leaks are possible
==298== 
==298== For lists of detected and suppressed errors, rerun with: -s
==298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.65 sec
----------------------------------------------------------
Test Passed.
"Find.FindEmpty" end time: Jan 30 06:47 UTC
"Find.FindEmpty" time elapsed: 00:00:01
----------------------------------------------------------

11/23 Testing: Find.FindViaMessage
11/23 Test: Find.FindViaMessage
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Find.FindViaMessage"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Find.FindViaMessage" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==299== Memcheck, a memory error detector
==299== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==299== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==299== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Find.FindViaMessage
==299== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Find.FindViaMessage
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Find
[ RUN      ] Find.FindViaMessage
==299== Conditional jump or move depends on uninitialised value(s)
==299==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==299==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==299==    by 0x1209CA: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:244)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==    by 0x162044: Run (gtest.cc:2684)
==299==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==299==    by 0x16212C: Run (gtest.cc:2816)
==299==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==299==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==299==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==299==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==299==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==299==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==299== 
==299== Conditional jump or move depends on uninitialised value(s)
==299==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==299==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==299==    by 0x1209CA: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:244)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==    by 0x162044: Run (gtest.cc:2684)
==299==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==299==    by 0x16212C: Run (gtest.cc:2816)
==299==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==299==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==299==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==299==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==299==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==299==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==299== 
==299== Conditional jump or move depends on uninitialised value(s)
==299==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==299==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==299==    by 0x1209CA: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:244)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==    by 0x162044: Run (gtest.cc:2684)
==299==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==299==    by 0x16212C: Run (gtest.cc:2816)
==299==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==299==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==299==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==299==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==299==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==299==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==299== 
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:248: Failure
Expected equality of these values:
  tokens[2]
    Which is: m2
  t
    Which is: 
==299== Invalid read of size 8
==299==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==299==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==299==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==299==    by 0x120BA4: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:239)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==    by 0x162044: Run (gtest.cc:2684)
==299==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==299==    by 0x16212C: Run (gtest.cc:2816)
==299==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==299==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==299==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==299==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==299==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==299==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==299==  Address 0x4ddab88 is 72 bytes inside a block of size 120 free'd
==299==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==299==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==299==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==299==    by 0x120BA4: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:239)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==    by 0x162044: Run (gtest.cc:2684)
==299==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==299==    by 0x16212C: Run (gtest.cc:2816)
==299==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==299==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==299==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==299==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==299==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==299==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==299==  Block was alloc'd at
==299==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==299==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==299==    by 0x119064: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:43)
==299==    by 0x1209CA: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:244)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==    by 0x162044: Run (gtest.cc:2684)
==299==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==299==    by 0x16212C: Run (gtest.cc:2816)
==299==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==299==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==299==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==299==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==299==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==299==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==299== 
==299== Invalid read of size 8
==299==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==299==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==299==    by 0x120BA4: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:239)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==    by 0x162044: Run (gtest.cc:2684)
==299==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==299==    by 0x16212C: Run (gtest.cc:2816)
==299==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==299==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==299==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==299==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==299==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==299==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==299==  Address 0x4ddbc30 is 0 bytes inside a block of size 40 free'd
==299==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==299==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==299==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==299==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==299==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==299==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==299==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==299==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==299==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==299==    by 0x120BA4: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:239)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==  Block was alloc'd at
==299==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==299==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==299==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==299==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==299==    by 0x13C57B: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, unsigned long, LabelList::MsgNode* const&) (vector.tcc:561)
==299==    by 0x13B910: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::resize(unsigned long, LabelList::MsgNode* const&) (stl_vector.h:957)
==299==    by 0x139FBC: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:255)
==299==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==299==    by 0x1209CA: Find_FindViaMessage_Test::TestBody() (label_tests.cpp:244)
==299==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==299==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==299==    by 0x161EE5: Run (gtest.cc:2508)
==299==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==299==    by 0x162044: Run (gtest.cc:2684)
==299==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==299== 
[  FAILED  ] Find.FindViaMessage (97 ms)
[----------] 1 test from Find (105 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (137 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Find.FindViaMessage

 1 FAILED TEST
==299== 
==299== HEAP SUMMARY:
==299==     in use at exit: 0 bytes in 0 blocks
==299==   total heap usage: 486 allocs, 486 frees, 138,696 bytes allocated
==299== 
==299== All heap blocks were freed -- no leaks are possible
==299== 
==299== Use --track-origins=yes to see where uninitialised values come from
==299== For lists of detected and suppressed errors, rerun with: -s
==299== ERROR SUMMARY: 17 errors from 5 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.66 sec
----------------------------------------------------------
Test Failed.
"Find.FindViaMessage" end time: Jan 30 06:47 UTC
"Find.FindViaMessage" time elapsed: 00:00:01
----------------------------------------------------------

12/23 Testing: Find.FindViaIndex
12/23 Test: Find.FindViaIndex
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Find.FindViaIndex"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Find.FindViaIndex" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==300== Memcheck, a memory error detector
==300== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==300== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==300== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Find.FindViaIndex
==300== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Find.FindViaIndex
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Find
[ RUN      ] Find.FindViaIndex
==300== Conditional jump or move depends on uninitialised value(s)
==300==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==300==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==300==    by 0x120F90: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:270)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==    by 0x162044: Run (gtest.cc:2684)
==300==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==300==    by 0x16212C: Run (gtest.cc:2816)
==300==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==300==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==300==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==300==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==300==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==300==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==300== 
==300== Conditional jump or move depends on uninitialised value(s)
==300==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==300==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==300==    by 0x120F90: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:270)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==    by 0x162044: Run (gtest.cc:2684)
==300==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==300==    by 0x16212C: Run (gtest.cc:2816)
==300==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==300==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==300==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==300==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==300==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==300==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==300== 
==300== Conditional jump or move depends on uninitialised value(s)
==300==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==300==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==300==    by 0x120F90: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:270)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==    by 0x162044: Run (gtest.cc:2684)
==300==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==300==    by 0x16212C: Run (gtest.cc:2816)
==300==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==300==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==300==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==300==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==300==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==300==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==300== 
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:274: Failure
Expected equality of these values:
  tokens[2]
    Which is: m2
  t
    Which is: m5
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:277: Failure
Expected equality of these values:
  tokens[5]
    Which is: m5
  t
    Which is: 
==300== Invalid read of size 8
==300==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==300==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==300==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==300==    by 0x12163D: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:265)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==    by 0x162044: Run (gtest.cc:2684)
==300==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==300==    by 0x16212C: Run (gtest.cc:2816)
==300==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==300==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==300==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==300==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==300==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==300==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==300==  Address 0x4ddab88 is 72 bytes inside a block of size 120 free'd
==300==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==300==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==300==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==300==    by 0x12163D: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:265)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==    by 0x162044: Run (gtest.cc:2684)
==300==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==300==    by 0x16212C: Run (gtest.cc:2816)
==300==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==300==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==300==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==300==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==300==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==300==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==300==  Block was alloc'd at
==300==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==300==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==300==    by 0x119064: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:43)
==300==    by 0x120F90: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:270)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==    by 0x162044: Run (gtest.cc:2684)
==300==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==300==    by 0x16212C: Run (gtest.cc:2816)
==300==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==300==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==300==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==300==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==300==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==300==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==300== 
==300== Invalid read of size 8
==300==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==300==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==300==    by 0x12163D: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:265)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==    by 0x162044: Run (gtest.cc:2684)
==300==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==300==    by 0x16212C: Run (gtest.cc:2816)
==300==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==300==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==300==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==300==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==300==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==300==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==300==  Address 0x4ddbc30 is 0 bytes inside a block of size 40 free'd
==300==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==300==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==300==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==300==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==300==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==300==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==300==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==300==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==300==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==300==    by 0x12163D: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:265)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==  Block was alloc'd at
==300==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==300==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==300==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==300==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==300==    by 0x13C57B: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, unsigned long, LabelList::MsgNode* const&) (vector.tcc:561)
==300==    by 0x13B910: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::resize(unsigned long, LabelList::MsgNode* const&) (stl_vector.h:957)
==300==    by 0x139FBC: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:255)
==300==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==300==    by 0x120F90: Find_FindViaIndex_Test::TestBody() (label_tests.cpp:270)
==300==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==300==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==300==    by 0x161EE5: Run (gtest.cc:2508)
==300==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==300==    by 0x162044: Run (gtest.cc:2684)
==300==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==300== 
[  FAILED  ] Find.FindViaIndex (105 ms)
[----------] 1 test from Find (112 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (134 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Find.FindViaIndex

 1 FAILED TEST
==300== 
==300== HEAP SUMMARY:
==300==     in use at exit: 0 bytes in 0 blocks
==300==   total heap usage: 523 allocs, 523 frees, 145,750 bytes allocated
==300== 
==300== All heap blocks were freed -- no leaks are possible
==300== 
==300== Use --track-origins=yes to see where uninitialised values come from
==300== For lists of detected and suppressed errors, rerun with: -s
==300== ERROR SUMMARY: 17 errors from 5 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.54 sec
----------------------------------------------------------
Test Failed.
"Find.FindViaIndex" end time: Jan 30 06:47 UTC
"Find.FindViaIndex" time elapsed: 00:00:01
----------------------------------------------------------

13/23 Testing: Unlabel.UnlabelBadLabel
13/23 Test: Unlabel.UnlabelBadLabel
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Unlabel.UnlabelBadLabel"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Unlabel.UnlabelBadLabel" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==301== Memcheck, a memory error detector
==301== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==301== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==301== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Unlabel.UnlabelBadLabel
==301== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Unlabel.UnlabelBadLabel
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Unlabel
[ RUN      ] Unlabel.UnlabelBadLabel
==301== Conditional jump or move depends on uninitialised value(s)
==301==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==301==    by 0x121D9B: Unlabel_UnlabelBadLabel_Test::TestBody() (label_tests.cpp:304)
==301==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==301==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==301==    by 0x161EE5: Run (gtest.cc:2508)
==301==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==301==    by 0x162044: Run (gtest.cc:2684)
==301==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==301==    by 0x16212C: Run (gtest.cc:2816)
==301==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==301==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==301==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==301==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==301==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==301==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==301== 
==301== Invalid read of size 8
==301==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==301==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==301==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==301==    by 0x12298E: Unlabel_UnlabelBadLabel_Test::TestBody() (label_tests.cpp:291)
==301==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==301==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==301==    by 0x161EE5: Run (gtest.cc:2508)
==301==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==301==    by 0x162044: Run (gtest.cc:2684)
==301==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==301==    by 0x16212C: Run (gtest.cc:2816)
==301==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==301==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==301==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==301==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==301==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==301==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==301==  Address 0x4ddab88 is 72 bytes inside a block of size 120 free'd
==301==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==301==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==301==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==301==    by 0x12298E: Unlabel_UnlabelBadLabel_Test::TestBody() (label_tests.cpp:291)
==301==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==301==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==301==    by 0x161EE5: Run (gtest.cc:2508)
==301==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==301==    by 0x162044: Run (gtest.cc:2684)
==301==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==301==    by 0x16212C: Run (gtest.cc:2816)
==301==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==301==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==301==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==301==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==301==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==301==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==301==  Block was alloc'd at
==301==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==301==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==301==    by 0x121B86: Unlabel_UnlabelBadLabel_Test::TestBody() (label_tests.cpp:297)
==301==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==301==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==301==    by 0x161EE5: Run (gtest.cc:2508)
==301==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==301==    by 0x162044: Run (gtest.cc:2684)
==301==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==301==    by 0x16212C: Run (gtest.cc:2816)
==301==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==301==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==301==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==301==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==301==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==301==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==301== 
==301== Invalid read of size 8
==301==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==301==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==301==    by 0x12298E: Unlabel_UnlabelBadLabel_Test::TestBody() (label_tests.cpp:291)
==301==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==301==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==301==    by 0x161EE5: Run (gtest.cc:2508)
==301==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==301==    by 0x162044: Run (gtest.cc:2684)
==301==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==301==    by 0x16212C: Run (gtest.cc:2816)
==301==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==301==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==301==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==301==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==301==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==301==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==301==  Address 0x4ddb6a0 is 0 bytes inside a block of size 64 free'd
==301==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==301==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==301==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==301==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==301==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==301==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==301==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==301==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==301==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==301==    by 0x12298E: Unlabel_UnlabelBadLabel_Test::TestBody() (label_tests.cpp:291)
==301==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==301==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==301==    by 0x161EE5: Run (gtest.cc:2508)
==301==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==301==  Block was alloc'd at
==301==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==301==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==301==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==301==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==301==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==301==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==301==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==301==    by 0x139F34: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:248)
==301==    by 0x121D2D: Unlabel_UnlabelBadLabel_Test::TestBody() (label_tests.cpp:303)
==301==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==301==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==301==    by 0x161EE5: Run (gtest.cc:2508)
==301==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==301==    by 0x162044: Run (gtest.cc:2684)
==301==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==301== 
[       OK ] Unlabel.UnlabelBadLabel (85 ms)
[----------] 1 test from Unlabel (92 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (113 ms total)
[  PASSED  ] 1 test.
==301== 
==301== HEAP SUMMARY:
==301==     in use at exit: 0 bytes in 0 blocks
==301==   total heap usage: 445 allocs, 445 frees, 131,704 bytes allocated
==301== 
==301== All heap blocks were freed -- no leaks are possible
==301== 
==301== Use --track-origins=yes to see where uninitialised values come from
==301== For lists of detected and suppressed errors, rerun with: -s
==301== ERROR SUMMARY: 7 errors from 3 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.65 sec
----------------------------------------------------------
Test Passed.
"Unlabel.UnlabelBadLabel" end time: Jan 30 06:47 UTC
"Unlabel.UnlabelBadLabel" time elapsed: 00:00:01
----------------------------------------------------------

14/23 Testing: Unlabel.Unlabel1
14/23 Test: Unlabel.Unlabel1
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Unlabel.Unlabel1"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Unlabel.Unlabel1" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==302== Memcheck, a memory error detector
==302== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==302== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==302== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Unlabel.Unlabel1
==302== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Unlabel.Unlabel1
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Unlabel
[ RUN      ] Unlabel.Unlabel1
==302== Conditional jump or move depends on uninitialised value(s)
==302==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==302==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==302==    by 0x1232F6: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:325)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==    by 0x162044: Run (gtest.cc:2684)
==302==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==302==    by 0x16212C: Run (gtest.cc:2816)
==302==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==302==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==302==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==302==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==302==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==302==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==302== 
==302== Conditional jump or move depends on uninitialised value(s)
==302==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==302==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==302==    by 0x1232F6: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:325)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==    by 0x162044: Run (gtest.cc:2684)
==302==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==302==    by 0x16212C: Run (gtest.cc:2816)
==302==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==302==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==302==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==302==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==302==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==302==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==302== 
==302== Conditional jump or move depends on uninitialised value(s)
==302==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==302==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==302==    by 0x1232F6: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:325)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==    by 0x162044: Run (gtest.cc:2684)
==302==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==302==    by 0x16212C: Run (gtest.cc:2816)
==302==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==302==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==302==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==302==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==302==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==302==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==302== 
Label ld has 2 messages, when 4 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:327: Failure
Value of: compareList({"m0", "m2", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 4 is expected.)
Expected: true
Label ld has 2 messages, when 3 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:333: Failure
Value of: compareList({"m0", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 3 is expected.)
Expected: true
==302== Invalid read of size 8
==302==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==302==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==302==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==302==    by 0x1246B1: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:320)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==    by 0x162044: Run (gtest.cc:2684)
==302==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==302==    by 0x16212C: Run (gtest.cc:2816)
==302==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==302==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==302==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==302==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==302==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==302==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==302==  Address 0x4ddab38 is 72 bytes inside a block of size 120 free'd
==302==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==302==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==302==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==302==    by 0x1246B1: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:320)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==    by 0x162044: Run (gtest.cc:2684)
==302==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==302==    by 0x16212C: Run (gtest.cc:2816)
==302==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==302==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==302==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==302==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==302==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==302==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==302==  Block was alloc'd at
==302==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==302==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==302==    by 0x119064: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:43)
==302==    by 0x1232F6: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:325)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==    by 0x162044: Run (gtest.cc:2684)
==302==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==302==    by 0x16212C: Run (gtest.cc:2816)
==302==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==302==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==302==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==302==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==302==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==302==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==302== 
==302== Invalid read of size 8
==302==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==302==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==302==    by 0x1246B1: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:320)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==    by 0x162044: Run (gtest.cc:2684)
==302==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==302==    by 0x16212C: Run (gtest.cc:2816)
==302==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==302==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==302==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==302==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==302==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==302==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==302==  Address 0x4ddbbe0 is 0 bytes inside a block of size 40 free'd
==302==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==302==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==302==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==302==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==302==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==302==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==302==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==302==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==302==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==302==    by 0x1246B1: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:320)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==  Block was alloc'd at
==302==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==302==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==302==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==302==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==302==    by 0x13C57B: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, unsigned long, LabelList::MsgNode* const&) (vector.tcc:561)
==302==    by 0x13B910: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::resize(unsigned long, LabelList::MsgNode* const&) (stl_vector.h:957)
==302==    by 0x139FBC: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:255)
==302==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==302==    by 0x1232F6: Unlabel_Unlabel1_Test::TestBody() (label_tests.cpp:325)
==302==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==302==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==302==    by 0x161EE5: Run (gtest.cc:2508)
==302==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==302==    by 0x162044: Run (gtest.cc:2684)
==302==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==302== 
[  FAILED  ] Unlabel.Unlabel1 (132 ms)
[----------] 1 test from Unlabel (140 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (173 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Unlabel.Unlabel1

 1 FAILED TEST
==302== 
==302== HEAP SUMMARY:
==302==     in use at exit: 0 bytes in 0 blocks
==302==   total heap usage: 542 allocs, 542 frees, 148,823 bytes allocated
==302== 
==302== All heap blocks were freed -- no leaks are possible
==302== 
==302== Use --track-origins=yes to see where uninitialised values come from
==302== For lists of detected and suppressed errors, rerun with: -s
==302== ERROR SUMMARY: 17 errors from 5 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.66 sec
----------------------------------------------------------
Test Failed.
"Unlabel.Unlabel1" end time: Jan 30 06:47 UTC
"Unlabel.Unlabel1" time elapsed: 00:00:01
----------------------------------------------------------

15/23 Testing: Unlabel.UnlabelRemove
15/23 Test: Unlabel.UnlabelRemove
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Unlabel.UnlabelRemove"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Unlabel.UnlabelRemove" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==303== Memcheck, a memory error detector
==303== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==303== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==303== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Unlabel.UnlabelRemove
==303== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Unlabel.UnlabelRemove
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Unlabel
[ RUN      ] Unlabel.UnlabelRemove
==303== Conditional jump or move depends on uninitialised value(s)
==303==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==303==    by 0x1254BA: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:362)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== Conditional jump or move depends on uninitialised value(s)
==303==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==303==    by 0x1254BA: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:362)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== Conditional jump or move depends on uninitialised value(s)
==303==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==303==    by 0x125528: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:363)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== Conditional jump or move depends on uninitialised value(s)
==303==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==303==    by 0x125528: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:363)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== Conditional jump or move depends on uninitialised value(s)
==303==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==303==    by 0x125596: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:364)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== Conditional jump or move depends on uninitialised value(s)
==303==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==303==    by 0x125596: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:364)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== Conditional jump or move depends on uninitialised value(s)
==303==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==303==    by 0x12566E: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:368)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== Conditional jump or move depends on uninitialised value(s)
==303==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==303==    by 0x12574A: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:372)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
Label la has 1 messages, when 0 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:381: Failure
Value of: compareList({}, list1, "la")
  Actual: false (Label la has 1 messages, when 0 is expected.)
Expected: true
Element 0(Expected: m4 / Actual: m1)

/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:382: Failure
Value of: compareList({"m4"}, list1, "lb")
  Actual: false (Element 0(Expected: m4 / Actual: m1)
)
Expected: true
==303== Invalid read of size 8
==303==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==303==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==303==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==303==    by 0x126522: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:350)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303==  Address 0x4ddab88 is 72 bytes inside a block of size 120 free'd
==303==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==303==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==303==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==303==    by 0x126522: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:350)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303==  Block was alloc'd at
==303==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==303==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==303==    by 0x12530F: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:356)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== Invalid read of size 8
==303==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==303==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==303==    by 0x126522: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:350)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303==  Address 0x4ddbd10 is 0 bytes inside a block of size 64 free'd
==303==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==303==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==303==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==303==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==303==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==303==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==303==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==303==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==303==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==303==    by 0x126522: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:350)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==  Block was alloc'd at
==303==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==303==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==303==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==303==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==303==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==303==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==303==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==303==    by 0x139F34: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:248)
==303==    by 0x125600: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:367)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303== 
[  FAILED  ] Unlabel.UnlabelRemove (145 ms)
[----------] 1 test from Unlabel (154 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (193 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Unlabel.UnlabelRemove

 1 FAILED TEST
==303== 
==303== HEAP SUMMARY:
==303==     in use at exit: 256 bytes in 4 blocks
==303==   total heap usage: 543 allocs, 539 frees, 148,194 bytes allocated
==303== 
==303== 256 (120 direct, 136 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 4
==303==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==303==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==303==    by 0x12530F: Unlabel_UnlabelRemove_Test::TestBody() (label_tests.cpp:356)
==303==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==303==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==303==    by 0x161EE5: Run (gtest.cc:2508)
==303==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==303==    by 0x162044: Run (gtest.cc:2684)
==303==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==303==    by 0x16212C: Run (gtest.cc:2816)
==303==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==303==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==303==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==303==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==303==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==303==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==303== 
==303== LEAK SUMMARY:
==303==    definitely lost: 120 bytes in 1 blocks
==303==    indirectly lost: 136 bytes in 3 blocks
==303==      possibly lost: 0 bytes in 0 blocks
==303==    still reachable: 0 bytes in 0 blocks
==303==         suppressed: 0 bytes in 0 blocks
==303== 
==303== Use --track-origins=yes to see where uninitialised values come from
==303== For lists of detected and suppressed errors, rerun with: -s
==303== ERROR SUMMARY: 27 errors from 11 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.80 sec
----------------------------------------------------------
Test Failed.
"Unlabel.UnlabelRemove" end time: Jan 30 06:47 UTC
"Unlabel.UnlabelRemove" time elapsed: 00:00:01
----------------------------------------------------------

16/23 Testing: Label.AddRemoveAfterLabel
16/23 Test: Label.AddRemoveAfterLabel
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Label.AddRemoveAfterLabel"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Label.AddRemoveAfterLabel" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==304== Memcheck, a memory error detector
==304== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==304== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==304== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Label.AddRemoveAfterLabel
==304== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Label.AddRemoveAfterLabel
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Label
[ RUN      ] Label.AddRemoveAfterLabel
==304== Conditional jump or move depends on uninitialised value(s)
==304==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==304==    by 0x119B22: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:57)
==304==    by 0x127098: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:394)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304== 
==304== Conditional jump or move depends on uninitialised value(s)
==304==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==304==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==304==    by 0x127098: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:394)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304== 
==304== Conditional jump or move depends on uninitialised value(s)
==304==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==304==    by 0x11A122: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:61)
==304==    by 0x127098: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:394)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304== 
==304== Invalid read of size 8
==304==    at 0x139C23: LabelList::remove(LabelList::MsgToken const&) (labellist.cpp:210)
==304==    by 0x1270B5: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:396)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304==  Address 0x4ddb890 is 0 bytes after a block of size 32 alloc'd
==304==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==304==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==304==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==304==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==304==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==304==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==304==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==304==    by 0x139F34: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:248)
==304==    by 0x119357: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:49)
==304==    by 0x127098: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:394)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304== 
==304== Invalid read of size 8
==304==    at 0x139C8E: LabelList::remove(LabelList::MsgToken const&) (labellist.cpp:216)
==304==    by 0x1270B5: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:396)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304==  Address 0x4ddb830 is 0 bytes after a block of size 32 alloc'd
==304==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==304==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==304==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==304==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==304==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==304==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==304==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==304==    by 0x139F12: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:247)
==304==    by 0x119357: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:49)
==304==    by 0x127098: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:394)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304== 
Label la has 1 messages, when 0 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:398: Failure
Value of: compareList({}, list1, "la")
  Actual: false (Label la has 1 messages, when 0 is expected.)
Expected: true
Label lb has 1 messages, when 0 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:399: Failure
Value of: compareList({}, list1, "lb")
  Actual: false (Label lb has 1 messages, when 0 is expected.)
Expected: true
Label lc has 1 messages, when 0 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:400: Failure
Value of: compareList({}, list1, "lc")
  Actual: false (Label lc has 1 messages, when 0 is expected.)
Expected: true
Label ld has 2 messages, when 4 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:401: Failure
Value of: compareList({"m0", "m2", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 4 is expected.)
Expected: true
Label ld has 2 messages, when 3 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:404: Failure
Value of: compareList({"m0", "m4", "m5"}, list1, "ld")
  Actual: false (Label ld has 2 messages, when 3 is expected.)
Expected: true
==304== Conditional jump or move depends on uninitialised value(s)
==304==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==304==    by 0x127EF5: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:413)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304== 
Label la has 1 messages, when 2 is expected.
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:421: Failure
Value of: compareList({"m3", "m6"}, list1, "la")
  Actual: false (Label la has 1 messages, when 2 is expected.)
Expected: true
==304== Invalid read of size 8
==304==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==304==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==304==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==304==    by 0x1290B2: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:389)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304==  Address 0x4ddb0b8 is 72 bytes inside a block of size 120 free'd
==304==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==304==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==304==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==304==    by 0x1290B2: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:389)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304==  Block was alloc'd at
==304==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==304==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==304==    by 0x119064: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:43)
==304==    by 0x127098: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:394)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304== 
==304== Invalid read of size 8
==304==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==304==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==304==    by 0x1290B2: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:389)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304==  Address 0x4dea0b0 is 0 bytes inside a block of size 16 free'd
==304==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==304==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==304==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==304==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==304==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==304==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==304==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==304==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==304==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==304==    by 0x1290B2: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:389)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==  Block was alloc'd at
==304==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==304==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==304==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==304==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==304==    by 0x13C57B: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, unsigned long, LabelList::MsgNode* const&) (vector.tcc:561)
==304==    by 0x13B910: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::resize(unsigned long, LabelList::MsgNode* const&) (stl_vector.h:957)
==304==    by 0x139FBC: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:255)
==304==    by 0x12873B: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:420)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304== 
[  FAILED  ] Label.AddRemoveAfterLabel (147 ms)
[----------] 1 test from Label (154 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (176 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Label.AddRemoveAfterLabel

 1 FAILED TEST
==304== 
==304== HEAP SUMMARY:
==304==     in use at exit: 608 bytes in 12 blocks
==304==   total heap usage: 717 allocs, 705 frees, 182,232 bytes allocated
==304== 
==304== 608 (360 direct, 248 indirect) bytes in 3 blocks are definitely lost in loss record 8 of 8
==304==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==304==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==304==    by 0x119064: setupList1(LabelList&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, LabelList::MsgToken*, unsigned long, bool) (label_tests.cpp:43)
==304==    by 0x127098: Label_AddRemoveAfterLabel_Test::TestBody() (label_tests.cpp:394)
==304==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==304==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==304==    by 0x161EE5: Run (gtest.cc:2508)
==304==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==304==    by 0x162044: Run (gtest.cc:2684)
==304==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==304==    by 0x16212C: Run (gtest.cc:2816)
==304==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==304==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==304==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==304==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==304==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==304==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==304== 
==304== LEAK SUMMARY:
==304==    definitely lost: 360 bytes in 3 blocks
==304==    indirectly lost: 248 bytes in 9 blocks
==304==      possibly lost: 0 bytes in 0 blocks
==304==    still reachable: 0 bytes in 0 blocks
==304==         suppressed: 0 bytes in 0 blocks
==304== 
==304== Use --track-origins=yes to see where uninitialised values come from
==304== For lists of detected and suppressed errors, rerun with: -s
==304== ERROR SUMMARY: 19 errors from 9 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.86 sec
----------------------------------------------------------
Test Failed.
"Label.AddRemoveAfterLabel" end time: Jan 30 06:47 UTC
"Label.AddRemoveAfterLabel" time elapsed: 00:00:01
----------------------------------------------------------

17/23 Testing: MsgToken.ComparisonBool
17/23 Test: MsgToken.ComparisonBool
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=MsgToken.ComparisonBool"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"MsgToken.ComparisonBool" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==305== Memcheck, a memory error detector
==305== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==305== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==305== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=MsgToken.ComparisonBool
==305== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = MsgToken.ComparisonBool
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from MsgToken
[ RUN      ] MsgToken.ComparisonBool
==305== Conditional jump or move depends on uninitialised value(s)
==305==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==305==    by 0x12A35B: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:441)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305== 
==305== Conditional jump or move depends on uninitialised value(s)
==305==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==305==    by 0x12A35B: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:441)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305== 
==305== Conditional jump or move depends on uninitialised value(s)
==305==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==305==    by 0x12B1DE: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:468)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305== 
==305== Invalid read of size 8
==305==    at 0x139C8E: LabelList::remove(LabelList::MsgToken const&) (labellist.cpp:216)
==305==    by 0x12B3F3: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:473)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305==  Address 0x4ddba50 is 0 bytes after a block of size 16 alloc'd
==305==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==305==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==305==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==305==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==305==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==305==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==305==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==305==    by 0x139F12: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:247)
==305==    by 0x12AB13: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:455)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305== 
/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests.cpp:476: Failure
Value of: tokens[6] == tb2
  Actual: false
Expected: true
==305== Invalid read of size 8
==305==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==305==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==305==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==305==    by 0x12B608: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:432)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305==  Address 0x4ddab88 is 72 bytes inside a block of size 120 free'd
==305==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==305==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==305==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==305==    by 0x12B608: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:432)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305==  Block was alloc'd at
==305==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==305==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==305==    by 0x12A28C: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:438)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305== 
==305== Invalid read of size 8
==305==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==305==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==305==    by 0x12B608: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:432)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305==  Address 0x4ddac50 is 0 bytes inside a block of size 8 free'd
==305==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==305==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==305==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==305==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==305==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==305==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==305==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==305==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==305==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==305==    by 0x12B608: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:432)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==  Block was alloc'd at
==305==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==305==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==305==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==305==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==305==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==305==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==305==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==305==    by 0x139192: LabelList::MsgNode::MsgNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:10)
==305==    by 0x1399B7: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==305==    by 0x12A28C: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:438)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305== 
[  FAILED  ] MsgToken.ComparisonBool (103 ms)
[----------] 1 test from MsgToken (112 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (145 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] MsgToken.ComparisonBool

 1 FAILED TEST
==305== 
==305== HEAP SUMMARY:
==305==     in use at exit: 160 bytes in 4 blocks
==305==   total heap usage: 476 allocs, 472 frees, 136,502 bytes allocated
==305== 
==305== 160 (120 direct, 40 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 4
==305==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==305==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==305==    by 0x12A28C: MsgToken_ComparisonBool_Test::TestBody() (label_tests.cpp:438)
==305==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==305==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==305==    by 0x161EE5: Run (gtest.cc:2508)
==305==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==305==    by 0x162044: Run (gtest.cc:2684)
==305==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==305==    by 0x16212C: Run (gtest.cc:2816)
==305==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==305==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==305==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==305==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==305==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==305==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==305== 
==305== LEAK SUMMARY:
==305==    definitely lost: 120 bytes in 1 blocks
==305==    indirectly lost: 40 bytes in 3 blocks
==305==      possibly lost: 0 bytes in 0 blocks
==305==    still reachable: 0 bytes in 0 blocks
==305==         suppressed: 0 bytes in 0 blocks
==305== 
==305== Use --track-origins=yes to see where uninitialised values come from
==305== For lists of detected and suppressed errors, rerun with: -s
==305== ERROR SUMMARY: 24 errors from 7 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.59 sec
----------------------------------------------------------
Test Failed.
"MsgToken.ComparisonBool" end time: Jan 30 06:47 UTC
"MsgToken.ComparisonBool" time elapsed: 00:00:01
----------------------------------------------------------

18/23 Testing: MsgToken.Label
18/23 Test: MsgToken.Label
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=MsgToken.Label"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"MsgToken.Label" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==306== Memcheck, a memory error detector
==306== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==306== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==306== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=MsgToken.Label
==306== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = MsgToken.Label
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from MsgToken
[ RUN      ] MsgToken.Label
==306== Conditional jump or move depends on uninitialised value(s)
==306==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==306==    by 0x12C1C2: MsgToken_Label_Test::TestBody() (label_tests.cpp:491)
==306==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==306==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==306==    by 0x161EE5: Run (gtest.cc:2508)
==306==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==306==    by 0x162044: Run (gtest.cc:2684)
==306==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==306==    by 0x16212C: Run (gtest.cc:2816)
==306==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==306==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==306==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==306==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==306==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==306==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==306== 
==306== Conditional jump or move depends on uninitialised value(s)
==306==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==306==    by 0x12C1C2: MsgToken_Label_Test::TestBody() (label_tests.cpp:491)
==306==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==306==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==306==    by 0x161EE5: Run (gtest.cc:2508)
==306==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==306==    by 0x162044: Run (gtest.cc:2684)
==306==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==306==    by 0x16212C: Run (gtest.cc:2816)
==306==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==306==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==306==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==306==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==306==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==306==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==306== 
==306== Invalid read of size 8
==306==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==306==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==306==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==306==    by 0x12C4E6: MsgToken_Label_Test::TestBody() (label_tests.cpp:482)
==306==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==306==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==306==    by 0x161EE5: Run (gtest.cc:2508)
==306==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==306==    by 0x162044: Run (gtest.cc:2684)
==306==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==306==    by 0x16212C: Run (gtest.cc:2816)
==306==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==306==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==306==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==306==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==306==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==306==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==306==  Address 0x4dda238 is 72 bytes inside a block of size 120 free'd
==306==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==306==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==306==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==306==    by 0x12C4E6: MsgToken_Label_Test::TestBody() (label_tests.cpp:482)
==306==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==306==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==306==    by 0x161EE5: Run (gtest.cc:2508)
==306==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==306==    by 0x162044: Run (gtest.cc:2684)
==306==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==306==    by 0x16212C: Run (gtest.cc:2816)
==306==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==306==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==306==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==306==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==306==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==306==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==306==  Block was alloc'd at
==306==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==306==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==306==    by 0x12C0F3: MsgToken_Label_Test::TestBody() (label_tests.cpp:488)
==306==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==306==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==306==    by 0x161EE5: Run (gtest.cc:2508)
==306==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==306==    by 0x162044: Run (gtest.cc:2684)
==306==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==306==    by 0x16212C: Run (gtest.cc:2816)
==306==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==306==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==306==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==306==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==306==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==306==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==306== 
==306== Invalid read of size 8
==306==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==306==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==306==    by 0x12C4E6: MsgToken_Label_Test::TestBody() (label_tests.cpp:482)
==306==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==306==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==306==    by 0x161EE5: Run (gtest.cc:2508)
==306==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==306==    by 0x162044: Run (gtest.cc:2684)
==306==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==306==    by 0x16212C: Run (gtest.cc:2816)
==306==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==306==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==306==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==306==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==306==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==306==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==306==  Address 0x4dda300 is 0 bytes inside a block of size 8 free'd
==306==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==306==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==306==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==306==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==306==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==306==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==306==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==306==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==306==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==306==    by 0x12C4E6: MsgToken_Label_Test::TestBody() (label_tests.cpp:482)
==306==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==306==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==306==    by 0x161EE5: Run (gtest.cc:2508)
==306==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==306==  Block was alloc'd at
==306==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==306==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==306==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==306==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==306==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==306==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==306==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==306==    by 0x139192: LabelList::MsgNode::MsgNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:10)
==306==    by 0x1399B7: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==306==    by 0x12C0F3: MsgToken_Label_Test::TestBody() (label_tests.cpp:488)
==306==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==306==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==306==    by 0x161EE5: Run (gtest.cc:2508)
==306==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==306== 
[       OK ] MsgToken.Label (72 ms)
[----------] 1 test from MsgToken (78 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (113 ms total)
[  PASSED  ] 1 test.
==306== 
==306== HEAP SUMMARY:
==306==     in use at exit: 0 bytes in 0 blocks
==306==   total heap usage: 410 allocs, 410 frees, 129,683 bytes allocated
==306== 
==306== All heap blocks were freed -- no leaks are possible
==306== 
==306== Use --track-origins=yes to see where uninitialised values come from
==306== For lists of detected and suppressed errors, rerun with: -s
==306== ERROR SUMMARY: 14 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.73 sec
----------------------------------------------------------
Test Passed.
"MsgToken.Label" end time: Jan 30 06:47 UTC
"MsgToken.Label" time elapsed: 00:00:01
----------------------------------------------------------

19/23 Testing: MsgToken.Msg
19/23 Test: MsgToken.Msg
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=MsgToken.Msg"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"MsgToken.Msg" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==307== Memcheck, a memory error detector
==307== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==307== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==307== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=MsgToken.Msg
==307== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = MsgToken.Msg
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from MsgToken
[ RUN      ] MsgToken.Msg
==307== Conditional jump or move depends on uninitialised value(s)
==307==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==307==    by 0x12CAC8: MsgToken_Msg_Test::TestBody() (label_tests.cpp:509)
==307==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==307==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==307==    by 0x161EE5: Run (gtest.cc:2508)
==307==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==307==    by 0x162044: Run (gtest.cc:2684)
==307==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==307==    by 0x16212C: Run (gtest.cc:2816)
==307==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==307==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==307==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==307==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==307==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==307==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==307== 
==307== Conditional jump or move depends on uninitialised value(s)
==307==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==307==    by 0x12CAC8: MsgToken_Msg_Test::TestBody() (label_tests.cpp:509)
==307==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==307==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==307==    by 0x161EE5: Run (gtest.cc:2508)
==307==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==307==    by 0x162044: Run (gtest.cc:2684)
==307==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==307==    by 0x16212C: Run (gtest.cc:2816)
==307==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==307==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==307==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==307==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==307==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==307==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==307== 
==307== Invalid read of size 8
==307==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==307==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==307==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==307==    by 0x12CDE1: MsgToken_Msg_Test::TestBody() (label_tests.cpp:500)
==307==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==307==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==307==    by 0x161EE5: Run (gtest.cc:2508)
==307==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==307==    by 0x162044: Run (gtest.cc:2684)
==307==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==307==    by 0x16212C: Run (gtest.cc:2816)
==307==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==307==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==307==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==307==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==307==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==307==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==307==  Address 0x4dda238 is 72 bytes inside a block of size 120 free'd
==307==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==307==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==307==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==307==    by 0x12CDE1: MsgToken_Msg_Test::TestBody() (label_tests.cpp:500)
==307==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==307==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==307==    by 0x161EE5: Run (gtest.cc:2508)
==307==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==307==    by 0x162044: Run (gtest.cc:2684)
==307==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==307==    by 0x16212C: Run (gtest.cc:2816)
==307==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==307==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==307==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==307==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==307==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==307==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==307==  Block was alloc'd at
==307==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==307==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==307==    by 0x12C9F9: MsgToken_Msg_Test::TestBody() (label_tests.cpp:506)
==307==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==307==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==307==    by 0x161EE5: Run (gtest.cc:2508)
==307==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==307==    by 0x162044: Run (gtest.cc:2684)
==307==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==307==    by 0x16212C: Run (gtest.cc:2816)
==307==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==307==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==307==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==307==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==307==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==307==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==307== 
==307== Invalid read of size 8
==307==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==307==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==307==    by 0x12CDE1: MsgToken_Msg_Test::TestBody() (label_tests.cpp:500)
==307==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==307==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==307==    by 0x161EE5: Run (gtest.cc:2508)
==307==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==307==    by 0x162044: Run (gtest.cc:2684)
==307==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==307==    by 0x16212C: Run (gtest.cc:2816)
==307==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==307==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==307==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==307==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==307==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==307==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==307==  Address 0x4dda300 is 0 bytes inside a block of size 8 free'd
==307==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==307==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==307==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==307==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==307==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==307==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==307==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==307==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==307==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==307==    by 0x12CDE1: MsgToken_Msg_Test::TestBody() (label_tests.cpp:500)
==307==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==307==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==307==    by 0x161EE5: Run (gtest.cc:2508)
==307==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==307==  Block was alloc'd at
==307==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==307==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==307==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==307==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==307==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==307==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==307==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==307==    by 0x139192: LabelList::MsgNode::MsgNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:10)
==307==    by 0x1399B7: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==307==    by 0x12C9F9: MsgToken_Msg_Test::TestBody() (label_tests.cpp:506)
==307==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==307==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==307==    by 0x161EE5: Run (gtest.cc:2508)
==307==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==307== 
[       OK ] MsgToken.Msg (107 ms)
[----------] 1 test from MsgToken (113 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (136 ms total)
[  PASSED  ] 1 test.
==307== 
==307== HEAP SUMMARY:
==307==     in use at exit: 0 bytes in 0 blocks
==307==   total heap usage: 412 allocs, 412 frees, 129,877 bytes allocated
==307== 
==307== All heap blocks were freed -- no leaks are possible
==307== 
==307== Use --track-origins=yes to see where uninitialised values come from
==307== For lists of detected and suppressed errors, rerun with: -s
==307== ERROR SUMMARY: 14 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.73 sec
----------------------------------------------------------
Test Passed.
"MsgToken.Msg" end time: Jan 30 06:47 UTC
"MsgToken.Msg" time elapsed: 00:00:01
----------------------------------------------------------

20/23 Testing: MsgToken.Ostream
20/23 Test: MsgToken.Ostream
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=MsgToken.Ostream"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"MsgToken.Ostream" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==308== Memcheck, a memory error detector
==308== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==308== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==308== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=MsgToken.Ostream
==308== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = MsgToken.Ostream
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from MsgToken
[ RUN      ] MsgToken.Ostream
==308== Conditional jump or move depends on uninitialised value(s)
==308==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==308==    by 0x12D3AA: MsgToken_Ostream_Test::TestBody() (label_tests.cpp:529)
==308==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==308==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==308==    by 0x161EE5: Run (gtest.cc:2508)
==308==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==308==    by 0x162044: Run (gtest.cc:2684)
==308==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==308==    by 0x16212C: Run (gtest.cc:2816)
==308==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==308==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==308==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==308==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==308==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==308==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==308== 
==308== Conditional jump or move depends on uninitialised value(s)
==308==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==308==    by 0x12D3AA: MsgToken_Ostream_Test::TestBody() (label_tests.cpp:529)
==308==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==308==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==308==    by 0x161EE5: Run (gtest.cc:2508)
==308==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==308==    by 0x162044: Run (gtest.cc:2684)
==308==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==308==    by 0x16212C: Run (gtest.cc:2816)
==308==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==308==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==308==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==308==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==308==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==308==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==308== 
==308== Invalid read of size 8
==308==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==308==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==308==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==308==    by 0x12D64C: MsgToken_Ostream_Test::TestBody() (label_tests.cpp:520)
==308==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==308==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==308==    by 0x161EE5: Run (gtest.cc:2508)
==308==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==308==    by 0x162044: Run (gtest.cc:2684)
==308==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==308==    by 0x16212C: Run (gtest.cc:2816)
==308==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==308==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==308==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==308==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==308==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==308==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==308==  Address 0x4ddab38 is 72 bytes inside a block of size 120 free'd
==308==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==308==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==308==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==308==    by 0x12D64C: MsgToken_Ostream_Test::TestBody() (label_tests.cpp:520)
==308==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==308==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==308==    by 0x161EE5: Run (gtest.cc:2508)
==308==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==308==    by 0x162044: Run (gtest.cc:2684)
==308==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==308==    by 0x16212C: Run (gtest.cc:2816)
==308==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==308==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==308==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==308==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==308==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==308==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==308==  Block was alloc'd at
==308==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==308==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==308==    by 0x12D2DB: MsgToken_Ostream_Test::TestBody() (label_tests.cpp:526)
==308==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==308==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==308==    by 0x161EE5: Run (gtest.cc:2508)
==308==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==308==    by 0x162044: Run (gtest.cc:2684)
==308==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==308==    by 0x16212C: Run (gtest.cc:2816)
==308==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==308==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==308==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==308==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==308==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==308==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==308== 
==308== Invalid read of size 8
==308==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==308==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==308==    by 0x12D64C: MsgToken_Ostream_Test::TestBody() (label_tests.cpp:520)
==308==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==308==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==308==    by 0x161EE5: Run (gtest.cc:2508)
==308==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==308==    by 0x162044: Run (gtest.cc:2684)
==308==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==308==    by 0x16212C: Run (gtest.cc:2816)
==308==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==308==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==308==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==308==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==308==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==308==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==308==  Address 0x4ddac00 is 0 bytes inside a block of size 8 free'd
==308==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==308==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==308==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==308==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==308==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==308==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==308==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==308==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==308==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==308==    by 0x12D64C: MsgToken_Ostream_Test::TestBody() (label_tests.cpp:520)
==308==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==308==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==308==    by 0x161EE5: Run (gtest.cc:2508)
==308==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==308==  Block was alloc'd at
==308==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==308==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==308==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==308==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==308==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==308==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==308==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==308==    by 0x139192: LabelList::MsgNode::MsgNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:10)
==308==    by 0x1399B7: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==308==    by 0x12D2DB: MsgToken_Ostream_Test::TestBody() (label_tests.cpp:526)
==308==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==308==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==308==    by 0x161EE5: Run (gtest.cc:2508)
==308==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==308== 
[       OK ] MsgToken.Ostream (74 ms)
[----------] 1 test from MsgToken (81 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (119 ms total)
[  PASSED  ] 1 test.
==308== 
==308== HEAP SUMMARY:
==308==     in use at exit: 0 bytes in 0 blocks
==308==   total heap usage: 434 allocs, 434 frees, 130,439 bytes allocated
==308== 
==308== All heap blocks were freed -- no leaks are possible
==308== 
==308== Use --track-origins=yes to see where uninitialised values come from
==308== For lists of detected and suppressed errors, rerun with: -s
==308== ERROR SUMMARY: 14 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.79 sec
----------------------------------------------------------
Test Passed.
"MsgToken.Ostream" end time: Jan 30 06:47 UTC
"MsgToken.Ostream" time elapsed: 00:00:01
----------------------------------------------------------

21/23 Testing: MsgToken.NextPrev
21/23 Test: MsgToken.NextPrev
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=MsgToken.NextPrev"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"MsgToken.NextPrev" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==309== Memcheck, a memory error detector
==309== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==309== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==309== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=MsgToken.NextPrev
==309== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = MsgToken.NextPrev
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from MsgToken
[ RUN      ] MsgToken.NextPrev
==309== Conditional jump or move depends on uninitialised value(s)
==309==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==309==    by 0x12DBDA: MsgToken_NextPrev_Test::TestBody() (label_tests.cpp:550)
==309==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==309==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==309==    by 0x161EE5: Run (gtest.cc:2508)
==309==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==309==    by 0x162044: Run (gtest.cc:2684)
==309==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==309==    by 0x16212C: Run (gtest.cc:2816)
==309==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==309==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==309==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==309==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==309==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==309==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==309== 
==309== Conditional jump or move depends on uninitialised value(s)
==309==    at 0x13A277: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:294)
==309==    by 0x12DBDA: MsgToken_NextPrev_Test::TestBody() (label_tests.cpp:550)
==309==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==309==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==309==    by 0x161EE5: Run (gtest.cc:2508)
==309==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==309==    by 0x162044: Run (gtest.cc:2684)
==309==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==309==    by 0x16212C: Run (gtest.cc:2816)
==309==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==309==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==309==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==309==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==309==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==309==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==309== 
==309== Invalid read of size 8
==309==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==309==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==309==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==309==    by 0x12E3EA: MsgToken_NextPrev_Test::TestBody() (label_tests.cpp:541)
==309==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==309==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==309==    by 0x161EE5: Run (gtest.cc:2508)
==309==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==309==    by 0x162044: Run (gtest.cc:2684)
==309==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==309==    by 0x16212C: Run (gtest.cc:2816)
==309==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==309==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==309==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==309==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==309==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==309==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==309==  Address 0x4ddab88 is 72 bytes inside a block of size 120 free'd
==309==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==309==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==309==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==309==    by 0x12E3EA: MsgToken_NextPrev_Test::TestBody() (label_tests.cpp:541)
==309==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==309==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==309==    by 0x161EE5: Run (gtest.cc:2508)
==309==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==309==    by 0x162044: Run (gtest.cc:2684)
==309==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==309==    by 0x16212C: Run (gtest.cc:2816)
==309==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==309==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==309==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==309==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==309==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==309==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==309==  Block was alloc'd at
==309==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==309==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==309==    by 0x12DB0B: MsgToken_NextPrev_Test::TestBody() (label_tests.cpp:547)
==309==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==309==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==309==    by 0x161EE5: Run (gtest.cc:2508)
==309==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==309==    by 0x162044: Run (gtest.cc:2684)
==309==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==309==    by 0x16212C: Run (gtest.cc:2816)
==309==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==309==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==309==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==309==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==309==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==309==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==309== 
==309== Invalid read of size 8
==309==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==309==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==309==    by 0x12E3EA: MsgToken_NextPrev_Test::TestBody() (label_tests.cpp:541)
==309==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==309==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==309==    by 0x161EE5: Run (gtest.cc:2508)
==309==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==309==    by 0x162044: Run (gtest.cc:2684)
==309==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==309==    by 0x16212C: Run (gtest.cc:2816)
==309==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==309==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==309==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==309==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==309==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==309==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==309==  Address 0x4ddac50 is 0 bytes inside a block of size 8 free'd
==309==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==309==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==309==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==309==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==309==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==309==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==309==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==309==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==309==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==309==    by 0x12E3EA: MsgToken_NextPrev_Test::TestBody() (label_tests.cpp:541)
==309==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==309==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==309==    by 0x161EE5: Run (gtest.cc:2508)
==309==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==309==  Block was alloc'd at
==309==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==309==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==309==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==309==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==309==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==309==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==309==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==309==    by 0x139192: LabelList::MsgNode::MsgNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:10)
==309==    by 0x1399B7: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==309==    by 0x12DB0B: MsgToken_NextPrev_Test::TestBody() (label_tests.cpp:547)
==309==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==309==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==309==    by 0x161EE5: Run (gtest.cc:2508)
==309==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==309== 
[       OK ] MsgToken.NextPrev (109 ms)
[----------] 1 test from MsgToken (121 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (168 ms total)
[  PASSED  ] 1 test.
==309== 
==309== HEAP SUMMARY:
==309==     in use at exit: 0 bytes in 0 blocks
==309==   total heap usage: 434 allocs, 434 frees, 130,446 bytes allocated
==309== 
==309== All heap blocks were freed -- no leaks are possible
==309== 
==309== Use --track-origins=yes to see where uninitialised values come from
==309== For lists of detected and suppressed errors, rerun with: -s
==309== ERROR SUMMARY: 14 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.06 sec
----------------------------------------------------------
Test Passed.
"MsgToken.NextPrev" end time: Jan 30 06:47 UTC
"MsgToken.NextPrev" time elapsed: 00:00:02
----------------------------------------------------------

22/23 Testing: Remove.UnlinkNodeLabel
22/23 Test: Remove.UnlinkNodeLabel
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Remove.UnlinkNodeLabel"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Remove.UnlinkNodeLabel" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==310== Memcheck, a memory error detector
==310== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==310== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==310== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Remove.UnlinkNodeLabel
==310== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Remove.UnlinkNodeLabel
[==========] Running 1 test from 1 test suite.
[----------] Global test environment set-up.
[----------] 1 test from Remove
[ RUN      ] Remove.UnlinkNodeLabel
==310== Conditional jump or move depends on uninitialised value(s)
==310==    at 0x13A169: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:275)
==310==    by 0x12EC01: Remove_UnlinkNodeLabel_Test::TestBody() (label_tests.cpp:580)
==310==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==310==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==310==    by 0x161EE5: Run (gtest.cc:2508)
==310==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==310==    by 0x162044: Run (gtest.cc:2684)
==310==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==310==    by 0x16212C: Run (gtest.cc:2816)
==310==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==310==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==310==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==310==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==310==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==310==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==310== 
==310== Invalid read of size 8
==310==    at 0x13B628: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::operator[](unsigned long) (stl_vector.h:1043)
==310==    by 0x1398C7: LabelList::clear() (labellist.cpp:151)
==310==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==310==    by 0x12F339: Remove_UnlinkNodeLabel_Test::TestBody() (label_tests.cpp:573)
==310==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==310==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==310==    by 0x161EE5: Run (gtest.cc:2508)
==310==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==310==    by 0x162044: Run (gtest.cc:2684)
==310==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==310==    by 0x16212C: Run (gtest.cc:2816)
==310==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==310==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==310==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==310==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==310==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==310==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==310==  Address 0x4ddad08 is 72 bytes inside a block of size 120 free'd
==310==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==310==    by 0x1398B2: LabelList::clear() (labellist.cpp:150)
==310==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==310==    by 0x12F339: Remove_UnlinkNodeLabel_Test::TestBody() (label_tests.cpp:573)
==310==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==310==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==310==    by 0x161EE5: Run (gtest.cc:2508)
==310==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==310==    by 0x162044: Run (gtest.cc:2684)
==310==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==310==    by 0x16212C: Run (gtest.cc:2816)
==310==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==310==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==310==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==310==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==310==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==310==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==310==  Block was alloc'd at
==310==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==310==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==310==    by 0x12EB19: Remove_UnlinkNodeLabel_Test::TestBody() (label_tests.cpp:578)
==310==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==310==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==310==    by 0x161EE5: Run (gtest.cc:2508)
==310==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==310==    by 0x162044: Run (gtest.cc:2684)
==310==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==310==    by 0x16212C: Run (gtest.cc:2816)
==310==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==310==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==310==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==310==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==310==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==310==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==310== 
==310== Invalid read of size 8
==310==    at 0x1398C8: LabelList::clear() (labellist.cpp:151)
==310==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==310==    by 0x12F339: Remove_UnlinkNodeLabel_Test::TestBody() (label_tests.cpp:573)
==310==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==310==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==310==    by 0x161EE5: Run (gtest.cc:2508)
==310==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==310==    by 0x162044: Run (gtest.cc:2684)
==310==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==310==    by 0x16212C: Run (gtest.cc:2816)
==310==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==310==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==310==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==310==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==310==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==310==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==310==  Address 0x4ddaf90 is 0 bytes inside a block of size 16 free'd
==310==    at 0x483CFBF: operator delete(void*) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==310==    by 0x13E01F: __gnu_cxx::new_allocator<LabelList::MsgNode*>::deallocate(LabelList::MsgNode**, unsigned long) (new_allocator.h:128)
==310==    by 0x13CCF7: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::deallocate(std::allocator<LabelList::MsgNode*>&, LabelList::MsgNode**, unsigned long) (alloc_traits.h:470)
==310==    by 0x13BB79: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_deallocate(LabelList::MsgNode**, unsigned long) (stl_vector.h:351)
==310==    by 0x13B4B3: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~_Vector_base() (stl_vector.h:332)
==310==    by 0x13B508: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::~vector() (stl_vector.h:680)
==310==    by 0x13B36D: LabelList::MsgNode::~MsgNode() (labellist.h:38)
==310==    by 0x1398AA: LabelList::clear() (labellist.cpp:150)
==310==    by 0x139841: LabelList::~LabelList() (labellist.cpp:142)
==310==    by 0x12F339: Remove_UnlinkNodeLabel_Test::TestBody() (label_tests.cpp:573)
==310==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==310==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==310==    by 0x161EE5: Run (gtest.cc:2508)
==310==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==310==  Block was alloc'd at
==310==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==310==    by 0x13EC15: __gnu_cxx::new_allocator<LabelList::MsgNode*>::allocate(unsigned long, void const*) (new_allocator.h:114)
==310==    by 0x13E685: std::allocator_traits<std::allocator<LabelList::MsgNode*> >::allocate(std::allocator<LabelList::MsgNode*>&, unsigned long) (alloc_traits.h:444)
==310==    by 0x13DE75: std::_Vector_base<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_allocate(unsigned long) (stl_vector.h:343)
==310==    by 0x13D18E: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::_M_realloc_insert<LabelList::MsgNode*>(__gnu_cxx::__normal_iterator<LabelList::MsgNode**, std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> > >, LabelList::MsgNode*&&) (vector.tcc:440)
==310==    by 0x13BFB1: void std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::emplace_back<LabelList::MsgNode*>(LabelList::MsgNode*&&) (vector.tcc:121)
==310==    by 0x13B60F: std::vector<LabelList::MsgNode*, std::allocator<LabelList::MsgNode*> >::push_back(LabelList::MsgNode*&&) (stl_vector.h:1201)
==310==    by 0x139F34: LabelList::label(LabelList::MsgToken const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:248)
==310==    by 0x12EC01: Remove_UnlinkNodeLabel_Test::TestBody() (label_tests.cpp:580)
==310==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==310==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==310==    by 0x161EE5: Run (gtest.cc:2508)
==310==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==310==    by 0x162044: Run (gtest.cc:2684)
==310==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==310== 
[       OK ] Remove.UnlinkNodeLabel (107 ms)
[----------] 1 test from Remove (114 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test suite ran. (137 ms total)
[  PASSED  ] 1 test.
==310== 
==310== HEAP SUMMARY:
==310==     in use at exit: 160 bytes in 4 blocks
==310==   total heap usage: 440 allocs, 436 frees, 130,929 bytes allocated
==310== 
==310== 160 (120 direct, 40 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 4
==310==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==310==    by 0x1399A5: LabelList::add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (labellist.cpp:177)
==310==    by 0x12EB19: Remove_UnlinkNodeLabel_Test::TestBody() (label_tests.cpp:578)
==310==    by 0x16DF40: HandleSehExceptionsInMethodIfSupported<testing::Test, void> (gtest.cc:2433)
==310==    by 0x16DF40: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (gtest.cc:2469)
==310==    by 0x161EE5: Run (gtest.cc:2508)
==310==    by 0x161EE5: testing::Test::Run() (gtest.cc:2498)
==310==    by 0x162044: Run (gtest.cc:2684)
==310==    by 0x162044: testing::TestInfo::Run() (gtest.cc:2657)
==310==    by 0x16212C: Run (gtest.cc:2816)
==310==    by 0x16212C: testing::TestSuite::Run() (gtest.cc:2795)
==310==    by 0x16264B: testing::internal::UnitTestImpl::RunAllTests() (gtest.cc:5338)
==310==    by 0x16E4B0: HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool> (gtest.cc:2433)
==310==    by 0x16E4B0: bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (gtest.cc:2469)
==310==    by 0x16287B: testing::UnitTest::Run() (gtest.cc:4925)
==310==    by 0x118AD3: main (in /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests)
==310== 
==310== LEAK SUMMARY:
==310==    definitely lost: 120 bytes in 1 blocks
==310==    indirectly lost: 40 bytes in 3 blocks
==310==      possibly lost: 0 bytes in 0 blocks
==310==    still reachable: 0 bytes in 0 blocks
==310==         suppressed: 0 bytes in 0 blocks
==310== 
==310== Use --track-origins=yes to see where uninitialised values come from
==310== For lists of detected and suppressed errors, rerun with: -s
==310== ERROR SUMMARY: 8 errors from 4 contexts (suppressed: 0 from 0)
<end of output>
Test time =   2.08 sec
----------------------------------------------------------
Test Passed.
"Remove.UnlinkNodeLabel" end time: Jan 30 06:47 UTC
"Remove.UnlinkNodeLabel" time elapsed: 00:00:02
----------------------------------------------------------

23/23 Testing: Random.Random
23/23 Test: Random.Random
Command: "/usr/bin/valgrind" "--tool=memcheck" "--leak-check=yes" "--trace-children=no" "/work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests" "--gtest_filter=Random.Random"
Directory: /work/hw-nlicea/hw1/hw1_tests/label_tests
"Random.Random" start time: Jan 30 06:47 UTC
Output:
----------------------------------------------------------
==311== Memcheck, a memory error detector
==311== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==311== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==311== Command: /work/hw-nlicea/hw1/hw1_tests/label_tests/label_tests --gtest_filter=Random.Random
==311== 
Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc
Note: Google Test filter = Random.Random
[==========] Running 0 tests from 0 test suites.
[==========] 0 tests from 0 test suites ran. (24 ms total)
[  PASSED  ] 0 tests.
==311== 
==311== HEAP SUMMARY:
==311==     in use at exit: 0 bytes in 0 blocks
==311==   total heap usage: 371 allocs, 371 frees, 126,790 bytes allocated
==311== 
==311== All heap blocks were freed -- no leaks are possible
==311== 
==311== For lists of detected and suppressed errors, rerun with: -s
==311== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
<end of output>
Test time =   1.54 sec
----------------------------------------------------------
Test Passed.
"Random.Random" end time: Jan 30 06:47 UTC
"Random.Random" time elapsed: 00:00:01
----------------------------------------------------------

End testing: Jan 30 06:47 UTC
